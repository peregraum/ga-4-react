{"version":3,"file":"ga-4-react.cjs.production.min.js","sources":["../src/lib/ga4manager.tsx","../src/components/GA4RComponents.tsx","../src/hooks/useGA4React.tsx","../src/components/withTracker.tsx"],"sourcesContent":["import {\n  GA4Config,\n  GA4ManagerOptionsInterface,\n  GA4ReactInterface,\n  GA4ReactResolveInterface,\n  gtagAction,\n  gtagCategory,\n  gtagFunction,\n  gtagLabel,\n} from '../models/gtagModels';\n\nexport const GA4ReactGlobalIndex = '__ga4React__';\n\ndeclare global {\n  interface Window {\n    gtag: gtagFunction | Function;\n    __ga4React__: GA4ReactResolveInterface;\n  }\n}\n\n/**\n * @desc class required to manage google analitycs 4\n * @class GA4React\n *  */\nexport class GA4React implements GA4ReactInterface {\n  private scriptSyncId: string = 'ga4ReactScriptSync';\n  private scriptAsyncId: string = 'ga4ReactScriptAsync';\n  private nonceAsync: string = '';\n  private nonceSync: string = '';\n  constructor(\n    private gaCode: string,\n    private gaConfig?: GA4Config,\n    private additionalGaCode?: Array<string>,\n    private timeout?: number,\n    private options?: GA4ManagerOptionsInterface\n  ) {\n    this.gaConfig = gaConfig ? gaConfig : {};\n    this.gaCode = gaCode;\n    this.timeout = timeout || 5000;\n    this.additionalGaCode = additionalGaCode;\n    this.options = options;\n\n    if (this.options) {\n      const { nonce } = this.options;\n      this.nonceAsync = nonce && nonce[0] ? nonce[0] : '';\n      this.nonceSync = nonce && nonce[1] ? nonce[1] : '';\n    }\n  }\n\n  /**\n   * @desc output on resolve initialization\n   */\n  private outputOnResolve(): GA4ReactResolveInterface {\n    return {\n      pageview: this.pageview,\n      event: this.event,\n      gtag: this.gtag,\n    };\n  }\n\n  /**\n   * @desc Return main function for send ga4 events, pageview etc\n   * @returns {Promise<GA4ReactResolveInterface>}\n   */\n  public initialize(): Promise<GA4ReactResolveInterface> {\n    return new Promise((resolve, reject) => {\n      if (GA4React.isInitialized()) {\n        reject(new Error('GA4React is being initialized'));\n      }\n\n      // in case of retry logics, remove previous scripts\n      const previousScriptAsync = document.getElementById(this.scriptAsyncId);\n      if (previousScriptAsync) {\n        previousScriptAsync.remove();\n      }\n\n      const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\n      const scriptAsync: HTMLScriptElement = document.createElement('script');\n      scriptAsync.setAttribute('id', this.scriptAsyncId);\n      scriptAsync.setAttribute('async', '');\n\n      if (\n        this.nonceAsync &&\n        typeof this.nonceAsync === 'string' &&\n        this.nonceAsync.length > 0\n      ) {\n        scriptAsync.setAttribute('nonce', this.nonceAsync);\n      }\n\n      scriptAsync.setAttribute(\n        'src',\n        `https://www.googletagmanager.com/gtag/js?id=${this.gaCode}`\n      );\n      scriptAsync.onload = () => {\n        const target: HTMLElement | null = document.getElementById(\n          this.scriptSyncId\n        );\n        if (target) {\n          target.remove();\n        }\n\n        // in case of retry logics, remove previous script sync\n        const previousScriptSync = document.getElementById(this.scriptSyncId);\n        if (previousScriptSync) {\n          previousScriptSync.remove();\n        }\n\n        const scriptSync: HTMLScriptElement = document.createElement('script');\n\n        scriptSync.setAttribute('id', this.scriptSyncId);\n\n        if (\n          this.nonceSync &&\n          typeof this.nonceSync === 'string' &&\n          this.nonceSync.length > 0\n        ) {\n          scriptSync.setAttribute('nonce', this.nonceSync);\n        }\n\n        let scriptHTML: string = `window.dataLayer = window.dataLayer || [];\n        function gtag(){dataLayer.push(arguments);};\n        gtag('js', new Date());\n        gtag('config', '${this.gaCode}', ${JSON.stringify(this.gaConfig)});`;\n\n        if (this.additionalGaCode) {\n          this.additionalGaCode.forEach((code: string) => {\n            scriptHTML += `\\ngtag('config', '${code}', ${JSON.stringify(\n              this.gaConfig\n            )});`;\n          });\n        }\n\n        scriptSync.innerHTML = scriptHTML;\n\n        head.appendChild(scriptSync);\n\n        const resolved: GA4ReactResolveInterface = this.outputOnResolve();\n\n        Object.assign(window, { [GA4ReactGlobalIndex]: resolved });\n\n        resolve(resolved);\n      };\n\n      scriptAsync.onerror = (event: Event | string): void => {\n        if (typeof event === 'string') {\n          reject(`GA4React intialization failed ${event}`);\n        } else {\n          const error = new Error();\n          error.name = 'GA4React intialization failed';\n          error.message = JSON.stringify(event, [\n            'message',\n            'arguments',\n            'type',\n            'name',\n          ]);\n          reject(error);\n        }\n      };\n\n      const onChangeReadyState = () => {\n        switch (document.readyState) {\n          case 'interactive':\n          case 'complete':\n            if (!GA4React.isInitialized()) {\n              head.appendChild(scriptAsync);\n              document.removeEventListener(\n                'readystatechange',\n                onChangeReadyState\n              );\n            }\n            break;\n        }\n      };\n\n      //document.addEventListener('readystatechange', onChangeReadyState);\n      if (!GA4React.isInitialized()) {\n        head.appendChild(scriptAsync);\n      }\n\n      setTimeout(() => {\n        reject(new Error('GA4React Timeout'));\n      }, this.timeout);\n    });\n  }\n\n  /**\n   * @desc send pageview event to gtag\n   * @param path\n   */\n  public pageview(\n    path: string | Location,\n    location?: string | Location,\n    title?: string\n  ): any {\n    return this.gtag('event', 'page_view', {\n      page_path: path,\n      page_location: location || window.location,\n      page_title: title || document.title,\n    });\n  }\n\n  /**\n   * @desc set event and send to gtag\n   * @param action\n   * @param label\n   * @param category\n   * @param nonInteraction\n   */\n  public event(\n    action: gtagAction,\n    label: gtagLabel,\n    category: gtagCategory,\n    nonInteraction: boolean = false\n  ): any {\n    return this.gtag('event', action, {\n      event_label: label,\n      event_category: category,\n      non_interaction: nonInteraction,\n    });\n  }\n\n  /**\n   * @desc direct access to gtag\n   * @param args\n   */\n  public gtag(...args: any): any {\n    //@ts-ignore\n    return window.gtag(...args);\n  }\n\n  /**\n   * @desc ga is initialized?\n   */\n  static isInitialized(): boolean {\n    switch (typeof window[GA4ReactGlobalIndex] !== 'undefined') {\n      case true:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * @desc get ga4react from global\n   */\n  static getGA4React(): GA4ReactResolveInterface | void {\n    if (GA4React.isInitialized()) {\n      return window[GA4ReactGlobalIndex];\n    } else {\n      console.error(new Error('GA4React is not initialized'));\n    }\n  }\n}\n\nexport default GA4React;\n","import React, { useState, useEffect } from 'react';\nimport GA4React from './../lib/ga4manager';\nimport {\n  GA4Config,\n  GA4ManagerOptionsInterface,\n  GA4ReactResolveInterface,\n} from '../models/gtagModels';\n\nexport interface IGA4R {\n  code: string;\n  timeout?: number;\n  config?: GA4Config;\n  additionalCode?: Array<string>;\n  children?: any;\n  options?: GA4ManagerOptionsInterface;\n}\n\nconst outputGA4 = (\n  children: any,\n  setComponents: Function,\n  ga4: GA4ReactResolveInterface\n) => {\n  setComponents(\n    React.Children.map(children, (child: React.ReactChildren, index) => {\n      if (!React.isValidElement(child)) {\n        return <React.Fragment>{child}</React.Fragment>;\n      }\n\n      //@ts-ignore\n      if (child.type && typeof child.type.name !== 'undefined') {\n        return React.cloneElement(child, {\n          //@ts-ignore\n          ga4: ga4,\n          index,\n        });\n      } else {\n        return child;\n      }\n    })\n  );\n};\n\nexport const GA4R: React.FC<IGA4R> = ({\n  code,\n  timeout,\n  config,\n  additionalCode,\n  children,\n  options,\n}) => {\n  const [components, setComponents] = useState<any>(null);\n\n  useEffect(() => {\n    if (!GA4React.isInitialized()) {\n      const ga4manager = new GA4React(\n        `${code}`,\n        config,\n        additionalCode,\n        timeout,\n        options\n      );\n      ga4manager.initialize().then(\n        (ga4: GA4ReactResolveInterface) => {\n          outputGA4(children, setComponents, ga4);\n        },\n        err => {\n          console.error(err);\n        }\n      );\n    } else {\n      const ga4 = GA4React.getGA4React();\n      if (ga4) {\n        outputGA4(children, setComponents, ga4);\n      }\n    }\n  }, []);\n\n  return <>{components}</>;\n};\n\nexport default GA4R;\n","import { useState, useEffect } from 'react';\nimport GA4React from '../lib/ga4manager';\n\nimport {\n  GA4Config,\n  GA4ManagerOptionsInterface,\n  GA4ReactResolveInterface,\n} from '../models/gtagModels';\n\nexport const useGA4React = (\n  gaCode?: string,\n  gaConfig?: GA4Config | object,\n  gaAdditionalCode?: Array<string>,\n  gaTimeout?: number,\n  options?: GA4ManagerOptionsInterface\n): GA4ReactResolveInterface | void => {\n  const [ga4, setGA4] = useState<GA4ReactResolveInterface | void>(undefined);\n  useEffect(() => {\n    if (gaCode) {\n      switch (GA4React.isInitialized()) {\n        case false:\n          const ga4react = new GA4React(\n            `${gaCode}`,\n            gaConfig,\n            gaAdditionalCode,\n            gaTimeout,\n            options\n          );\n          ga4react.initialize().then(\n            (ga4: GA4ReactResolveInterface) => {\n              setGA4(ga4);\n            },\n            (err: Error) => {\n              console.error(err);\n            }\n          );\n          break;\n        case true:\n          setGA4(GA4React.getGA4React());\n          break;\n      }\n    } else {\n      setGA4(GA4React.getGA4React());\n    }\n  }, [gaCode]);\n  return ga4;\n};\n","import React, { useEffect } from 'react';\nimport GA4React from '../lib/ga4manager';\n\nimport {\n  GA4Config,\n  GA4ManagerOptionsInterface,\n  GA4ReactResolveInterface,\n} from '../models/gtagModels';\n\nexport interface GA4WithTrackerComponentInterface {\n  path: string | Location;\n  location?: string | Location;\n  title?: string;\n  gaCode?: string;\n  gaConfig?: GA4Config | object;\n  additionalCode?: Array<string>;\n  timeout?: number;\n  options?: GA4ManagerOptionsInterface;\n}\n\nexport function withTracker(\n  MyComponent: React.FC<any>\n): React.FC<GA4WithTrackerComponentInterface> {\n  return (props: GA4WithTrackerComponentInterface & any) => {\n    const {\n      path,\n      location,\n      title,\n      gaCode,\n      gaTimeout,\n      gaConfig,\n      gaAdditionalCode,\n      options,\n    } = props;\n    useEffect(() => {\n      switch (GA4React.isInitialized()) {\n        case true:\n          const ga4 = GA4React.getGA4React();\n          if (ga4) {\n            ga4.pageview(path, location, title);\n          }\n          break;\n        default:\n        case false:\n          const ga4react = new GA4React(\n            `${gaCode}`,\n            gaConfig,\n            gaAdditionalCode,\n            gaTimeout,\n            options\n          );\n          ga4react.initialize().then(\n            (ga4: GA4ReactResolveInterface) => {\n              ga4.pageview(path, location, title);\n            },\n            (err: Error) => {\n              console.error(err);\n            }\n          );\n          break;\n      }\n    });\n    return <MyComponent {...props} />;\n  };\n}\n\nexport default withTracker;\n"],"names":["GA4React","constructor","gaCode","gaConfig","additionalGaCode","timeout","options","this","nonce","nonceAsync","nonceSync","outputOnResolve","pageview","event","gtag","initialize","Promise","resolve","reject","isInitialized","Error","previousScriptAsync","document","getElementById","scriptAsyncId","remove","head","getElementsByTagName","scriptAsync","createElement","setAttribute","length","onload","target","scriptSyncId","previousScriptSync","scriptSync","scriptHTML","JSON","stringify","forEach","code","innerHTML","appendChild","resolved","Object","assign","window","onerror","error","name","message","setTimeout","path","location","title","page_path","page_location","page_title","action","label","category","nonInteraction","event_label","event_category","non_interaction","console","outputGA4","children","setComponents","ga4","React","Children","map","child","index","isValidElement","type","cloneElement","Fragment","config","additionalCode","components","useState","useEffect","getGA4React","then","err","gaAdditionalCode","gaTimeout","setGA4","undefined","MyComponent","props"],"mappings":"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"}